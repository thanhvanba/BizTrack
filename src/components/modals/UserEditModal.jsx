import React, { useEffect } from 'react';
import { Modal, Form, Input, Select, Button } from 'antd';

const { Option } = Select;

const UserEditModal = ({ visible, onCancel, onSave, userData, allRoles }) => {
  console.log("üöÄ ~ UserEditModal ~ userData:", userData)
  console.log("üöÄ ~ UserEditModal ~ allRoles:", allRoles)
  const [form] = Form.useForm();

  useEffect(() => {
    if (userData) {
      form.setFieldsValue({
        fullname: userData.fullname,
        username: userData.username,
        email: userData.email,
        phone: userData.phone,
        role_id: userData.role_id,
        status: userData.status,
      });
    } else {
      form.resetFields();
    }
  }, [userData, form]);

  const handleSave = () => {
    form.validateFields().then(values => {
      onSave({ ...userData, ...values });
    }).catch(info => {
      console.log('Validate Failed:', info);
    });
  };

  return (
    <Modal
      visible={visible}
      title="Ch·ªânh s·ª≠a th√¥ng tin ng∆∞·ªùi d√πng"
      onCancel={onCancel}
      footer={[
        <Button key="back" onClick={onCancel}>
          H·ªßy
        </Button>,
        <Button key="submit" type="primary" onClick={handleSave}>
          L∆∞u
        </Button>,
      ]}
    >
      <Form
        form={form}
        layout="vertical"
        name="user_edit_form"
      >
        <Form.Item
          name="fullname"
          label="T√™n hi·ªÉn th·ªã"
        // rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n hi·ªÉn th·ªã!' }]}
        >
          <Input />
        </Form.Item>
        <Form.Item
          name="username"
          label="T√™n ƒëƒÉng nh·∫≠p"
          rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p t√™n ƒëƒÉng nh·∫≠p!' }]}
        >
          <Input />
        </Form.Item>
        <Form.Item
          name="email"
          label="Email"
          rules={[{ required: true, type: 'email', message: 'Vui l√≤ng nh·∫≠p email h·ª£p l·ªá!' }]}
        >
          <Input />
        </Form.Item>
        <Form.Item
          name="phone"
          label="S·ªë ƒëi·ªán tho·∫°i"
        >
          <Input />
        </Form.Item>
        <Form.Item
          name="role_id"
          label="Vai tr√≤"
          rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn vai tr√≤!' }]}
        >
          <Select placeholder="Ch·ªçn vai tr√≤">
            {allRoles.map(role => (
              <Option key={role.role_id} value={role.role_id}>
                {role.role_name}
              </Option>
            ))}
          </Select>
        </Form.Item>
        <Form.Item
          name="status"
          label="Tr·∫°ng th√°i"
          rules={[{ required: true, message: 'Vui l√≤ng ch·ªçn tr·∫°ng th√°i!' }]}
        >
          <Select placeholder="Ch·ªçn tr·∫°ng th√°i">
            <Option value="active">ƒêang ho·∫°t ƒë·ªông</Option>
            <Option value="inactive">ƒê√£ kh√≥a</Option>
          </Select>
        </Form.Item>
      </Form>
    </Modal>
  );
};

export default UserEditModal;
