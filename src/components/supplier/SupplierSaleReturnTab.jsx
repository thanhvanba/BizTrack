import { Table, Tag } from "antd";
import supplierService from "../../service/supplierService";
import { useEffect, useState } from "react";

const columns = [
  { title: "M√£ h√≥a ƒë∆°n", dataIndex: "code", key: "code" },
  { title: "Th·ªùi gian", dataIndex: "date", key: "date" },
  { title: "Ng∆∞·ªùi b√°n", dataIndex: "seller", key: "seller" },
  {
    title: "T·ªïng c·ªông",
    dataIndex: "total",
    key: "total",
    align: "right",
    render: (val) => `${val < 0 ? '-' : ''}${Math.abs(val).toLocaleString()}‚Ç´`
  },
  {
    title: "Tr·∫°ng th√°i", dataIndex: "status", key: "status",
    render: (_, record) => {
      const status = record.status;
      let text = status;
      let color = "default";

      if (status === "ƒê√£ tr·∫£") {
        color = "blue";
      } else if (status === "Ho√†n th√†nh") {
        color = "green";
      }

      return <Tag color={color}>{text}</Tag>;
    }
  },
];

const data = [
  { key: "1", code: "TH000003", date: "07/06/2025 15:43", seller: "AnNK", total: -900000, status: "ƒê√£ tr·∫£" },
  { key: "2", code: "HD000050.01", date: "07/06/2025 15:31", seller: "AnNK", total: 1900000, status: "Ho√†n th√†nh" },
  { key: "3", code: "HD000049", date: "05/06/2025 15:56", seller: "AnNK", total: 470000, status: "Ho√†n th√†nh" },
  { key: "4", code: "HD000047.01", date: "05/06/2025 15:21", seller: "AnNK", total: 99000, status: "Ho√†n th√†nh" },
  { key: "5", code: "HD000042", date: "01/06/2025 15:42", seller: "H∆∞∆°ng - K·∫ø To√°n", total: 30095000, status: "Ho√†n th√†nh" },
];

const SupplierReceivablesTab = ({supplierId}) => {
  console.log("üöÄ ~ CustomerSaleReturnTab ~ customerData:", supplierId);

  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [dataSource, setDataSource] = useState([]);
  console.log("üöÄ ~ SupplierReceivablesTab ~ dataSource:", dataSource)

  useEffect(() => {
    const fetchSupplierHistory = async () => {
      // ƒê·ªïi t√™n h√†m th√†nh fetchOrderHistory
      if (!supplierId) {
        setLoading(false);
        setError("Kh√¥ng c√≥ ID kh√°ch h√†ng ƒë·ªÉ t·∫£i b√°o c√°o.");
        return;
      }

      try {
        setLoading(true);
        setError(null);
        const supplierHistory = await supplierService.getSupplierHistory(supplierId)
        setDataSource(supplierHistory.data);
      } catch (err) {
        console.error("L·ªói khi t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng:", err);
        setError("Kh√¥ng th·ªÉ t·∫£i l·ªãch s·ª≠ ƒë∆°n h√†ng. Vui l√≤ng th·ª≠ l·∫°i.");
      } finally {
        setLoading(false);
      }
    };

    fetchSupplierHistory();
  }, [supplierId]);
  return <Table columns={columns} dataSource={data} pagination={false} size="middle" scroll={{ x: 800 }} />;
};

export default SupplierReceivablesTab;
