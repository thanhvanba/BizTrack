import React, { useState } from "react";
import { Card, Button, Switch, Typography, Divider } from "antd";
import { EditOutlined, KeyOutlined, SafetyOutlined } from "@ant-design/icons";
import { useDispatch, useSelector } from "react-redux";
import ProfileEditModal from "../../components/modals/ProfileEditModal";
import userService from "../../service/userService";
import { fetchProfile } from "../../redux/user/user.slice";

const { Title, Text } = Typography;

export default function ProfilePage() {
  const [openModal, setOpenModal] = useState(false);
  const [twoFactor, setTwoFactor] = useState(false);

  const user = useSelector(state => state.user.userInfo.data) || {};
  const dispatch = useDispatch();
  console.log("üöÄ ~ ProfilePage ~ user:", user)

  const handleSave = async (updated) => {
    console.log("D·ªØ li·ªáu l∆∞u:", updated);
    setOpenModal(false);
    // G·ªçi API c·∫≠p nh·∫≠t th√¥ng tin ·ªü ƒë√¢y, v√≠ d·ª•:
    await userService.updateUser(user.user_id, updated)
    dispatch(fetchProfile());
  };
  return (
    <div className="max-w-5xl mx-auto p-6">
      <Title level={3}>T√†i kho·∫£n</Title>

      {/* Th√¥ng tin ng∆∞·ªùi d√πng */}
      <Card
        title="Th√¥ng tin ng∆∞·ªùi d√πng"
        extra={
          <Button icon={<EditOutlined />} onClick={() => setOpenModal(true)}>
            Ch·ªânh s·ª≠a
          </Button>
        }
        className="mb-6 rounded-2xl shadow-sm"
      >
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div>
            <Text type="secondary">T√™n hi·ªÉn th·ªã</Text>
            <p>{user.fullname || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
          <div>
            <Text type="secondary">T√™n ƒëƒÉng nh·∫≠p</Text>
            <p>{user.username || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
          <div>
            <Text type="secondary">Vai tr√≤</Text>
            <p>{user.role_name || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
          <div>
            <Text type="secondary">ƒêi·ªán tho·∫°i</Text>
            <p>{user.phone || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
          <div>
            <Text type="secondary">Email</Text>
            <p>{user.email || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
          <div>
            <Text type="secondary">Sinh nh·∫≠t</Text>
            <p>{user.birthday || <span className="text-black/30">Ch∆∞a c√≥</span>}</p>
          </div>
        </div>
      </Card>

      {/* ƒêƒÉng nh·∫≠p v√† b·∫£o m·∫≠t */}
      <Card title="ƒêƒÉng nh·∫≠p v√† b·∫£o m·∫≠t" className="rounded-2xl shadow-sm !mt-3">
        <div className="flex justify-between items-start mb-6">
          <div>
            <div className="flex items-center gap-2 mb-1">
              <KeyOutlined />
              <Text strong>M·∫≠t kh·∫©u</Text>
            </div>
            <Text type="secondary">
              ƒê·ªÉ b·∫£o m·∫≠t t√†i kho·∫£n t·ªët h∆°n, h√£y s·ª≠ d·ª•ng m·∫≠t kh·∫©u m·∫°nh v√† thay ƒë·ªïi
              ƒë·ªãnh k·ª≥ 6 th√°ng/l·∫ßn.
              <br />
              H·ªá th·ªëng s·∫Ω t·ª± ƒë·ªông ƒëƒÉng xu·∫•t t√†i kho·∫£n kh·ªèi t·∫•t c·∫£ thi·∫øt b·ªã tr∆∞·ªõc
              khi ƒë·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng.
            </Text>
          </div>
          <Button type="primary">ƒê·ªïi m·∫≠t kh·∫©u</Button>
        </div>

        {/* <Divider />

        <div className="flex justify-between items-center">
          <div>
            <div className="flex items-center gap-2 mb-1">
              <SafetyOutlined />
              <Text strong>X√°c th·ª±c 2 l·ªõp cho t√†i kho·∫£n c·ªßa b·∫°n</Text>
            </div>
            <Text type="secondary">
              Y√™u c·∫ßu m√£ x√°c th·ª±c khi b·∫°n ƒëƒÉng nh·∫≠p tr√™n thi·∫øt b·ªã l·∫°.
            </Text>
          </div>
          <Switch checked={twoFactor} onChange={setTwoFactor} />
        </div> */}
      </Card>

      <ProfileEditModal
        open={openModal}
        onClose={() => setOpenModal(false)}
        onSave={handleSave}
        user={user}
      />
    </div>
  );
}
